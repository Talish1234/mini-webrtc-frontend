{"ast":null,"code":"var _jsxFileName = \"/home/kernel/Desktop/webrtc/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport { Assessment, Phone } from '@material-ui/icons';\nimport Peer from 'simple-peer';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:5000');\nfunction App() {\n  _s();\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      myVideo.current.srcObject = stream;\n    });\n    socket.on('me', id => {\n      setMe(id);\n    });\n    socket.on('callUser', data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setName(data.name);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IZiDfJs3A1DnCF4TRJaTts67PTs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["IconButton","Button","TextField","Assessment","Phone","Peer","React","useEffect","useState","useRef","CopyToClipboard","io","jsxDEV","_jsxDEV","socket","connect","App","_s","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","id","data","from","signal","callUser","peer","initiator","trickle","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kernel/Desktop/webrtc/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { IconButton ,Button, TextField,} from '@material-ui/core';\nimport {Assessment,Phone} from '@material-ui/icons';\nimport Peer from 'simple-peer';\nimport React, {useEffect,useState,useRef} from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {io} from 'socket.io-client'\nconst socket = io.connect('http://localhost:5000')\nfunction App() {\n  const [ me, setMe ] = useState(\"\")\n\tconst [ stream, setStream ] = useState()\n\tconst [ receivingCall, setReceivingCall ] = useState(false)\n\tconst [ caller, setCaller ] = useState(\"\")\n\tconst [ callerSignal, setCallerSignal ] = useState()\n\tconst [ callAccepted, setCallAccepted ] = useState(false)\n\tconst [ idToCall, setIdToCall ] = useState(\"\")\n\tconst [ callEnded, setCallEnded] = useState(false)\n\tconst [ name, setName ] = useState(\"\")\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n\n  useEffect(()=> {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n\t\t\tsetStream(stream)\n\t\t\t\tmyVideo.current.srcObject = stream\n\t\t})\n\n    socket.on('me', (id)=> {\n      setMe(id);\n    })\n\n    socket.on('callUser', data => {\n     setReceivingCall(true);\n     setCaller(data.from);\n     setName(data.name);\n     setCallerSignal(data.signal)\n    })\n  },[])\n\n  const callUser = (id) => {\n    const peer = new Peer({\n      initiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream: stream\n    });\n\n    peer.on(\"signal\", (data) => {\n\t\t\tsocket.emit(\"callUser\", {\n\t\t\t\tuserToCall: id,\n\t\t\t\tsignalData: data,\n\t\t\t\tfrom: me,\n\t\t\t\tname: name\n\t\t\t})\n\t\t})\n\n    peer.on(\"stream\", (stream) => {\n\t\t\t\n      userVideo.current.srcObject = stream\n    \n  })\n\n  socket.on(\"callAccepted\", (signal) => {\n    setCallAccepted(true)\n    peer.signal(signal)\n  })\n\n  connectionRef.current = peer\n\n\n}\n\nconst answerCall =() =>  {\n  setCallAccepted(true)\n  const peer = new Peer({\n    initiator: false,\n    trickle: false,\n    stream: stream\n  })\n  peer.on(\"signal\", (data) => {\n    socket.emit(\"answerCall\", { signal: data, to: caller })\n  })\n  peer.on(\"stream\", (stream) => {\n    userVideo.current.srcObject = stream\n  })\n\n  peer.signal(callerSignal)\n  connectionRef.current = peer\n}\n\nconst leaveCall = () => {\n  setCallEnded(true)\n  connectionRef.current.destroy()\n}\n\n  return (\n    <div className=\"App\">\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}